apply plugin: 'maven-publish'
apply plugin: 'signing'


task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
Properties p = new Properties()
p.load(new FileInputStream(secretPropsFile))
p.each { name, value ->
    ext[name] = value
}

publishing {
    publications {
        releaseLocal(MavenPublication) {
            groupId publishConfig.groupId
            artifactId publishConfig.artifactId
            version publishConfig.version
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = publishConfig.artifactId
                if (!isDev) {
                    description = 'source view in app'
                    url = 'https://github.com/fhbianling/sourceview'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'bianling'
                            name = 'bianling'
                            email = 'bianlingcd@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:github.com/fhbianling/sourceview.git'
                        developerConnection = 'scm:git:ssh://github.com/fhbianling/sourceview.git'
                        url = 'https://github.com/fhbianling/sourceview/tree/main'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            if (isDev) {
                url = layout.buildDirectory.dir('../../repo')
            } else {
                name 'mavencentral'
                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
}
if (!isDev) {
    signing {
        sign publishing.publications
    }
}