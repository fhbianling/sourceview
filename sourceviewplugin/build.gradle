plugins {
    id 'groovy'
    id 'maven'
    id 'maven-publish'
    id 'signing'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation 'com.google.code.gson:gson:2.8.6'
}

repositories {
    maven { url 'https://jitpack.io' }
    jcenter()
    google()
    mavenCentral()
}


ext {
    PUBLISH_ARTIFACT_ID = 'SourceCodePlugin'
    PUBLISH_VERSION = '0.1.3'
    PUBLISH_GROUP_ID = 'com.github.fhbianling'
}

version = PUBLISH_VERSION
group = PUBLISH_GROUP_ID

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
Properties p = new Properties()
p.load(new FileInputStream(secretPropsFile))
p.each { name, value ->
    ext[name] = value
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        gradlePlugin(MavenPublication) {
            groupId = PUBLISH_GROUP_ID
            version = PUBLISH_VERSION
            artifactId = PUBLISH_ARTIFACT_ID
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = PUBLISH_ARTIFACT_ID
                description = 'source view in app'
                url = 'https://github.com/fhbianling/sourceview'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'bianling'
                        name = 'bianling'
                        email = 'bianlingcd@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:github.com/fhbianling/sourceview.git'
                    developerConnection = 'scm:git:ssh://github.com/fhbianling/sourceview.git'
                    //分支地址：
                    url = 'https://github.com/fhbianling/sourceview/tree/main'
                }
            }
        }
    }

    repositories {
        maven {
            name 'mavencentral'
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}
signing {
    sign publishing.publications
}